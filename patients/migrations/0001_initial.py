# Generated by Django 4.1.3 on 2023-05-15 08:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Payments",
            fields=[
                ("receiptid", models.IntegerField(db_column="ReceiptID")),
                (
                    "receiptno",
                    models.CharField(
                        db_column="ReceiptNo",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "payno",
                    models.CharField(
                        blank=True, db_column="PayNo", max_length=20, null=True
                    ),
                ),
                (
                    "paydate",
                    models.DateTimeField(blank=True, db_column="PayDate", null=True),
                ),
                (
                    "documentno",
                    models.CharField(
                        blank=True, db_column="DocumentNo", max_length=20, null=True
                    ),
                ),
                (
                    "amountwords",
                    models.CharField(
                        blank=True, db_column="AmountWords", max_length=200, null=True
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True, db_column="Notes", max_length=100, null=True
                    ),
                ),
                (
                    "amounttendered",
                    models.DecimalField(
                        blank=True,
                        db_column="AmountTendered",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "exchangerate",
                    models.DecimalField(
                        blank=True,
                        db_column="ExchangeRate",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "change",
                    models.DecimalField(
                        blank=True,
                        db_column="Change",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "sendbalancetoaccount",
                    models.BooleanField(
                        blank=True, db_column="SendBalanceToAccount", null=True
                    ),
                ),
                (
                    "useaccountbalance",
                    models.BooleanField(
                        blank=True, db_column="UseAccountBalance", null=True
                    ),
                ),
                (
                    "clientmachine",
                    models.CharField(
                        blank=True, db_column="ClientMachine", max_length=40, null=True
                    ),
                ),
                (
                    "recorddatetime",
                    models.DateTimeField(
                        blank=True, db_column="RecordDateTime", null=True
                    ),
                ),
                (
                    "clientfullname",
                    models.CharField(
                        blank=True,
                        db_column="ClientFullName",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "withholdingtax",
                    models.DecimalField(
                        blank=True,
                        db_column="WithholdingTax",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "granddiscount",
                    models.DecimalField(
                        blank=True,
                        db_column="GrandDiscount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True,
                        db_column="Amount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "cashamount",
                    models.DecimalField(
                        blank=True,
                        db_column="CashAmount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Payments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Lookupdata",
            fields=[
                (
                    "dataid",
                    models.CharField(
                        db_column="DataID",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("datades", models.CharField(db_column="DataDes", max_length=100)),
            ],
            options={
                "db_table": "LookupData",
            },
        ),
        migrations.CreateModel(
            name="Patients",
            fields=[
                ("patientid", models.IntegerField(db_column="PatientID")),
                (
                    "patientno",
                    models.CharField(
                        db_column="PatientNo",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "referenceno",
                    models.CharField(
                        blank=True, db_column="ReferenceNo", max_length=20, null=True
                    ),
                ),
                (
                    "firstname",
                    models.CharField(
                        blank=True, db_column="FirstName", max_length=20, null=True
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        blank=True, db_column="LastName", max_length=20, null=True
                    ),
                ),
                (
                    "middlename",
                    models.CharField(
                        blank=True, db_column="MiddleName", max_length=20, null=True
                    ),
                ),
                (
                    "birthdate",
                    models.DateTimeField(blank=True, db_column="BirthDate", null=True),
                ),
                (
                    "photo",
                    models.BinaryField(
                        blank=True, db_column="Photo", max_length="max", null=True
                    ),
                ),
                (
                    "fingerprint",
                    models.BinaryField(
                        blank=True, db_column="Fingerprint", max_length="max", null=True
                    ),
                ),
                (
                    "birthplace",
                    models.CharField(
                        blank=True, db_column="BirthPlace", max_length=40, null=True
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="Address", max_length=100, null=True
                    ),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True, db_column="Occupation", max_length=100, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, db_column="Phone", max_length=30, null=True
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=40, null=True
                    ),
                ),
                (
                    "joindate",
                    models.DateTimeField(blank=True, db_column="JoinDate", null=True),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=40, null=True
                    ),
                ),
                (
                    "nokname",
                    models.CharField(
                        blank=True, db_column="NOKName", max_length=41, null=True
                    ),
                ),
                (
                    "nokrelationship",
                    models.CharField(
                        blank=True,
                        db_column="NOKRelationship",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "nokphone",
                    models.CharField(
                        blank=True, db_column="NOKPhone", max_length=30, null=True
                    ),
                ),
                (
                    "defaultbillno",
                    models.CharField(
                        blank=True, db_column="DefaultBillNo", max_length=20, null=True
                    ),
                ),
                (
                    "defaultmembercardno",
                    models.CharField(
                        blank=True,
                        db_column="DefaultMemberCardNo",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "defaultmainmembername",
                    models.CharField(
                        blank=True,
                        db_column="DefaultMainMemberName",
                        max_length=41,
                        null=True,
                    ),
                ),
                (
                    "enforcedefaultbillno",
                    models.BooleanField(db_column="EnforceDefaultBillNo"),
                ),
                (
                    "hidedetails",
                    models.BooleanField(blank=True, db_column="HideDetails", null=True),
                ),
                (
                    "employeraddress",
                    models.CharField(
                        blank=True,
                        db_column="EmployerAddress",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "referringmedicalofficer",
                    models.CharField(
                        blank=True,
                        db_column="ReferringMedicalOfficer",
                        max_length=41,
                        null=True,
                    ),
                ),
                (
                    "nearestdispensary",
                    models.CharField(
                        blank=True,
                        db_column="NearestDispensary",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "previousadmissions",
                    models.CharField(
                        blank=True,
                        db_column="PreviousAdmissions",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "chronicdiseases",
                    models.CharField(
                        blank=True,
                        db_column="ChronicDiseases",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "firstvisitdate",
                    models.DateTimeField(
                        blank=True, db_column="FirstVisitDate", null=True
                    ),
                ),
                (
                    "lastvisitdate",
                    models.DateTimeField(
                        blank=True, db_column="LastVisitDate", null=True
                    ),
                ),
                (
                    "combinationon",
                    models.CharField(
                        blank=True, db_column="CombinationOn", max_length=30, null=True
                    ),
                ),
                (
                    "totalvisits",
                    models.IntegerField(blank=True, db_column="TotalVisits", null=True),
                ),
                (
                    "accountbalance",
                    models.DecimalField(
                        blank=True,
                        db_column="AccountBalance",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "clientmachine",
                    models.CharField(
                        blank=True, db_column="ClientMachine", max_length=40, null=True
                    ),
                ),
                (
                    "recorddatetime",
                    models.DateTimeField(
                        blank=True, db_column="RecordDateTime", null=True
                    ),
                ),
                (
                    "nationalidno",
                    models.CharField(
                        blank=True, db_column="NationalIDNo", max_length=20, null=True
                    ),
                ),
                (
                    "xraynumbers",
                    models.DecimalField(
                        blank=True,
                        db_column="XrayNumbers",
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                    ),
                ),
                ("policenotified", models.BooleanField(db_column="PoliceNotified")),
                (
                    "infectiousdiseasesnotified",
                    models.BooleanField(db_column="InfectiousDiseasesNotified"),
                ),
                (
                    "medicalconditions",
                    models.CharField(
                        blank=True,
                        db_column="MedicalConditions",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "provisionaldiagnosis",
                    models.CharField(
                        blank=True,
                        db_column="ProvisionalDiagnosis",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "referringfacility",
                    models.CharField(
                        blank=True,
                        db_column="ReferringFacility",
                        max_length=41,
                        null=True,
                    ),
                ),
                (
                    "opdoutstanding",
                    models.DecimalField(
                        blank=True,
                        db_column="OPDOutstanding",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "extrabilloutstanding",
                    models.DecimalField(
                        blank=True,
                        db_column="ExtraBillOutstanding",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "lastaccountactiondate",
                    models.DateTimeField(
                        blank=True, db_column="LastAccountActionDate", null=True
                    ),
                ),
                (
                    "knowaboutservice",
                    models.CharField(
                        blank=True,
                        db_column="KnowAboutService",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "genderid",
                    models.ForeignKey(
                        blank=True,
                        db_column="GenderID",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="patients.lookupdata",
                    ),
                ),
            ],
            options={
                "db_table": "Patients",
            },
        ),
        migrations.CreateModel(
            name="Visits",
            fields=[
                ("visitid", models.IntegerField(db_column="VisitID")),
                (
                    "visitno",
                    models.CharField(
                        db_column="VisitNo",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "visitdate",
                    models.DateTimeField(blank=True, db_column="VisitDate", null=True),
                ),
                (
                    "referredby",
                    models.CharField(
                        blank=True, db_column="ReferredBy", max_length=40, null=True
                    ),
                ),
                (
                    "billno",
                    models.CharField(
                        blank=True, db_column="BillNo", max_length=20, null=True
                    ),
                ),
                (
                    "insuranceno",
                    models.CharField(
                        blank=True, db_column="InsuranceNo", max_length=20, null=True
                    ),
                ),
                (
                    "membercardno",
                    models.CharField(
                        blank=True, db_column="MemberCardNo", max_length=30, null=True
                    ),
                ),
                (
                    "mainmembername",
                    models.CharField(
                        blank=True, db_column="MainMemberName", max_length=41, null=True
                    ),
                ),
                (
                    "claimreferenceno",
                    models.CharField(
                        blank=True,
                        db_column="ClaimReferenceNo",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "accesscashservices",
                    models.BooleanField(
                        blank=True, db_column="AccessCashServices", null=True
                    ),
                ),
                (
                    "fingerprintverified",
                    models.BooleanField(
                        blank=True, db_column="FingerprintVerified", null=True
                    ),
                ),
                (
                    "copaypercent",
                    models.DecimalField(
                        blank=True,
                        db_column="CoPayPercent",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "copayvalue",
                    models.DecimalField(
                        blank=True,
                        db_column="CoPayValue",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "smartcardapplicable",
                    models.BooleanField(
                        blank=True, db_column="SmartCardApplicable", null=True
                    ),
                ),
                (
                    "clientmachine",
                    models.CharField(
                        blank=True, db_column="ClientMachine", max_length=40, null=True
                    ),
                ),
                (
                    "recorddatetime",
                    models.DateTimeField(
                        blank=True, db_column="RecordDateTime", null=True
                    ),
                ),
                (
                    "locked",
                    models.BooleanField(blank=True, db_column="Locked", null=True),
                ),
                (
                    "patientno",
                    models.ForeignKey(
                        blank=True,
                        db_column="PatientNo",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="patient_table",
                        to="patients.patients",
                    ),
                ),
            ],
            options={
                "db_table": "Visits",
            },
        ),
        migrations.CreateModel(
            name="Items",
            fields=[
                (
                    "visitno",
                    models.OneToOneField(
                        db_column="VisitNo",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="patients.visits",
                    ),
                ),
                ("itemcode", models.CharField(db_column="ItemCode", max_length=20)),
                (
                    "quantity",
                    models.IntegerField(blank=True, db_column="Quantity", null=True),
                ),
                (
                    "unitcost",
                    models.DecimalField(
                        blank=True,
                        db_column="UnitCost",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "unitprice",
                    models.DecimalField(
                        blank=True,
                        db_column="UnitPrice",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "itemdetails",
                    models.CharField(
                        blank=True, db_column="ItemDetails", max_length=800, null=True
                    ),
                ),
                (
                    "lastupdate",
                    models.DateTimeField(blank=True, db_column="LastUpdate", null=True),
                ),
                (
                    "clientmachine",
                    models.CharField(
                        blank=True, db_column="ClientMachine", max_length=40, null=True
                    ),
                ),
                (
                    "recorddatetime",
                    models.DateTimeField(
                        blank=True, db_column="RecordDateTime", null=True
                    ),
                ),
                (
                    "creatorclientmachine",
                    models.CharField(
                        blank=True,
                        db_column="CreatorClientMachine",
                        max_length=40,
                        null=True,
                    ),
                ),
                (
                    "itemname",
                    models.CharField(
                        blank=True, db_column="ItemName", max_length=800, null=True
                    ),
                ),
                (
                    "unitmeasure",
                    models.CharField(
                        blank=True, db_column="UnitMeasure", max_length=100, null=True
                    ),
                ),
                (
                    "vatvalue",
                    models.DecimalField(
                        blank=True,
                        db_column="VATValue",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "invoiceno",
                    models.CharField(
                        blank=True, db_column="InvoiceNo", max_length=20, null=True
                    ),
                ),
                (
                    "originalquantity",
                    models.IntegerField(
                        blank=True, db_column="OriginalQuantity", null=True
                    ),
                ),
                (
                    "originalprice",
                    models.DecimalField(
                        blank=True,
                        db_column="OriginalPrice",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "conclusiondate",
                    models.DateTimeField(
                        blank=True, db_column="ConclusionDate", null=True
                    ),
                ),
                (
                    "paydate",
                    models.DateTimeField(blank=True, db_column="PayDate", null=True),
                ),
                (
                    "adjustmentcount",
                    models.IntegerField(
                        blank=True, db_column="AdjustmentCount", null=True
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        db_column="Discount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "Items",
                "unique_together": {("visitno", "itemcode")},
            },
        ),
        migrations.CreateModel(
            name="Extrabills",
            fields=[
                ("extrabillid", models.IntegerField(db_column="ExtraBillID")),
                (
                    "extrabillno",
                    models.CharField(
                        db_column="ExtraBillNo",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "extrabilldate",
                    models.DateTimeField(
                        blank=True, db_column="ExtraBillDate", null=True
                    ),
                ),
                (
                    "recorddatetime",
                    models.DateTimeField(
                        blank=True, db_column="RecordDateTime", null=True
                    ),
                ),
                (
                    "billno",
                    models.CharField(
                        blank=True, db_column="BillNo", max_length=20, null=True
                    ),
                ),
                (
                    "insuranceno",
                    models.CharField(
                        blank=True, db_column="InsuranceNo", max_length=20, null=True
                    ),
                ),
                (
                    "membercardno",
                    models.CharField(
                        blank=True, db_column="MemberCardNo", max_length=30, null=True
                    ),
                ),
                (
                    "mainmembername",
                    models.CharField(
                        blank=True, db_column="MainMemberName", max_length=41, null=True
                    ),
                ),
                (
                    "claimreferenceno",
                    models.CharField(
                        blank=True,
                        db_column="ClaimReferenceNo",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "copaypercent",
                    models.DecimalField(
                        blank=True,
                        db_column="CoPayPercent",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "copayvalue",
                    models.DecimalField(
                        blank=True,
                        db_column="CoPayValue",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "accesscashservices",
                    models.BooleanField(
                        blank=True, db_column="AccessCashServices", null=True
                    ),
                ),
                (
                    "smartcardapplicable",
                    models.BooleanField(
                        blank=True, db_column="SmartCardApplicable", null=True
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True,
                        db_column="Amount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "amountpaid",
                    models.DecimalField(
                        blank=True,
                        db_column="AmountPaid",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "originalamount",
                    models.DecimalField(
                        blank=True,
                        db_column="OriginalAmount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "associatedextrabillno",
                    models.ForeignKey(
                        blank=True,
                        db_column="AssociatedExtraBillNo",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="patients.extrabills",
                    ),
                ),
                (
                    "visitno",
                    models.ForeignKey(
                        blank=True,
                        db_column="VisitNo",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="patients.visits",
                    ),
                ),
            ],
            options={
                "db_table": "ExtraBills",
            },
        ),
        migrations.CreateModel(
            name="Admissions",
            fields=[
                ("admissionid", models.IntegerField(db_column="AdmissionID")),
                (
                    "admissionno",
                    models.CharField(
                        db_column="AdmissionNo",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "admissiondatetime",
                    models.DateTimeField(
                        blank=True, db_column="AdmissionDateTime", null=True
                    ),
                ),
                (
                    "admissionnotes",
                    models.CharField(
                        blank=True,
                        db_column="AdmissionNotes",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "clientmachine",
                    models.CharField(
                        blank=True, db_column="ClientMachine", max_length=40, null=True
                    ),
                ),
                (
                    "recorddatetime",
                    models.DateTimeField(
                        blank=True, db_column="RecordDateTime", null=True
                    ),
                ),
                (
                    "chartnumber",
                    models.CharField(
                        blank=True, db_column="ChartNumber", max_length=20, null=True
                    ),
                ),
                (
                    "billno",
                    models.CharField(
                        blank=True, db_column="BillNo", max_length=20, null=True
                    ),
                ),
                (
                    "insuranceno",
                    models.CharField(
                        blank=True, db_column="InsuranceNo", max_length=20, null=True
                    ),
                ),
                (
                    "membercardno",
                    models.CharField(
                        blank=True, db_column="MemberCardNo", max_length=30, null=True
                    ),
                ),
                (
                    "mainmembername",
                    models.CharField(
                        blank=True, db_column="MainMemberName", max_length=41, null=True
                    ),
                ),
                (
                    "claimreferenceno",
                    models.CharField(
                        blank=True,
                        db_column="ClaimReferenceNo",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "copaypercent",
                    models.DecimalField(
                        blank=True,
                        db_column="CoPayPercent",
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "copayvalue",
                    models.DecimalField(
                        blank=True,
                        db_column="CoPayValue",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "accesscashservices",
                    models.BooleanField(
                        blank=True, db_column="AccessCashServices", null=True
                    ),
                ),
                (
                    "smartcardapplicable",
                    models.BooleanField(
                        blank=True, db_column="SmartCardApplicable", null=True
                    ),
                ),
                (
                    "provisionaldiagnosis",
                    models.CharField(
                        blank=True,
                        db_column="ProvisionalDiagnosis",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "admissionstatusid",
                    models.ForeignKey(
                        blank=True,
                        db_column="AdmissionStatusID",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="patients.lookupdata",
                    ),
                ),
                (
                    "patientno",
                    models.ForeignKey(
                        blank=True,
                        db_column="PatientNo",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="patients.patients",
                    ),
                ),
                (
                    "visitno",
                    models.OneToOneField(
                        blank=True,
                        db_column="VisitNo",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="patients.visits",
                    ),
                ),
            ],
            options={
                "db_table": "Admissions",
            },
        ),
        migrations.CreateModel(
            name="Paymentdetails",
            fields=[
                (
                    "receiptno",
                    models.OneToOneField(
                        db_column="ReceiptNo",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="patients.payments",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(blank=True, db_column="Quantity", null=True),
                ),
                (
                    "unitprice",
                    models.DecimalField(
                        blank=True,
                        db_column="UnitPrice",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        db_column="Discount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True,
                        db_column="Amount",
                        decimal_places=4,
                        max_digits=19,
                        null=True,
                    ),
                ),
                (
                    "syncstatus",
                    models.BooleanField(blank=True, db_column="SyncStatus", null=True),
                ),
                (
                    "invoiceno",
                    models.CharField(
                        blank=True, db_column="InvoiceNo", max_length=20, null=True
                    ),
                ),
                (
                    "itemcategoryid",
                    models.ForeignKey(
                        db_column="ItemCategoryID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="patients.items",
                    ),
                ),
                (
                    "itemcode",
                    models.ForeignKey(
                        db_column="ItemCode",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="items_itemcode",
                        to="patients.items",
                    ),
                ),
                (
                    "visitno",
                    models.ForeignKey(
                        db_column="VisitNo",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="items_vistno",
                        to="patients.items",
                    ),
                ),
            ],
            options={
                "db_table": "PaymentDetails",
                "unique_together": {
                    (
                        "receiptno",
                        "visitno",
                        "itemcode",
                        "itemcategoryid",
                        "itemcategoryid",
                    )
                },
            },
        ),
    ]
